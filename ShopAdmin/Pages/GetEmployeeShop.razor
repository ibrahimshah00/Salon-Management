@page "/getEmployeeShop"
@using Entities;
@using Microsoft.AspNetCore.Components.Authorization;
@using System.ComponentModel
@using AntDesign.TableModels
@using AntDesign.Core.Extensions
@using Entities;
@using ShopAdmin.Data;
@inject IShop ob;
@inject NavigationManager nm;
@inject Appstate mystate;



<AuthorizeView Roles="ShopOwner">
    <Authorized>

<div class="col-md-4 mb-4">
    <div class="card shadow-sm">
                @if (!string.IsNullOrEmpty(entshop.image))
                {
                    var imagePath = entshop.image.Replace("wwwroot", "");
                <img src="@imagePath" class="card-img-top" alt="Service Image loading" style="height: 200px; object-fit: cover; border-top-left-radius: .25rem; border-top-right-radius: .25rem;" />
                }
        <div class="card-body text-center">
            <h4 class="card-title text-dark">@entshop.businessdescription</h4>
            
            <p class="card-text"><small class="text-muted"></small></p>
            <h4 class="text-success"></h4>
           
            <div class="d-flex justify-content-between align-items-center mb-3">
                <span class="badge bg-secondary">@entshop.phone</span>
                <span class="badge bg-success">@entshop.city</span>
            </div>
            <div class="d-flex justify-content-center">

                <button @onclick="()=>NavigateToShopPackages(entshop.shopid)" class="btn btn-primary btn-sm me-1">Package</button>
                <button @onclick="()=>NavigateToShopServices(entshop.shopid)" class="btn btn-primary btn-sm me-1">Services</button>
                <button @onclick="()=>NavigateToShopEmployee(entshop.shopid)" class="btn btn-primary btn-sm me-1">Employee</button>
                <button @onclick="()=>DeleteShop(entshop.shopid)" class="btn btn-danger btn-sm">Delete</button>
            </div>
        </div>
    </div>
</div>

    </Authorized>
    <NotAuthorized>
        <p>You are not authorized to view this page.</p>
    </NotAuthorized>
</AuthorizeView>
@code {
    private EntShop entshop { get; set; } = new EntShop();
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }
    private int empid;
    private int shopid;
    protected override async Task OnInitializedAsync()
    {
        var autState = await authenticationState;
        empid = Convert.ToInt32(autState.User.FindFirst("BOId")?.Value);
        entshop = await ob.GetShopByEmployeeId(empid);
        shopid = entshop.shopid;
        mystate.ShopDetail = shopid;
    }

    private async Task NavigateToShopPackages(int shopid)
    {
        mystate.ShopDetail = shopid;
        nm.NavigateTo($"/shoppackages");


    }

    private async Task DeleteShop(int id)
    {
        await ob.DeleteShop(id);
        entshop = await ob.GetShopByEmployeeId(empid);
    }

    private async Task NavigateToShopEmployee(int shopid)
    {
        mystate.ShopDetail = shopid;
        nm.NavigateTo($"/shopemployee");
    }

    private async Task NavigateToShopServices(int shopid)
    {
        mystate.ShopDetail = shopid;
        nm.NavigateTo($"/shopservices");
    }

    
}

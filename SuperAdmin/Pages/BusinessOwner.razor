@page "/businessprofile"
@inject IBusniessOwner ob;
@inject NavigationManager nm;

<h1>All Business Profiles </h1>

<a href="savebo" class="btn btn-primary">Add New</a>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Id</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>CNIC</th>
            <th>Creation Date</th>
            <th>Phone</th>
            <th>Active</th>
            <th>Update</th>
            <th>Action</th>
        </tr>
    </thead>
    @foreach (var item in ListBusinesses)
    {
        <tr>
            <td>@item.boid</td>
            <td>@item.firstname</td>
            <td>@item.lastname</td>
            <td>@item.emailadress</td>
            <td>@item.cnic</td>
            <td>@item.creationdatetime</td>
            <td>@item.phone</td>
            <td>@item.isactive</td>
            <button style="margin-top:8px" @onclick="()=>Update(item.boid)">Update</button>

            <td>
                <button @onclick="()=>Delete(item.boid)">Delete</button>
                
            </td>
        </tr>
    }
</table>


@code {
    private List<EntBusinessOwner> ListBusinesses { get; set; } = new List<EntBusinessOwner>();

    protected override async Task OnInitializedAsync()
    {
        ListBusinesses = await ob.GetBusinessOwners();
    }

    private async Task Delete(int BOId)
    {
        await ob.DeleteBusinessOwners(BOId);
        ListBusinesses = await ob.GetBusinessOwners();
    }


    [Parameter] public static EntBusinessOwner UpdateBO { get; set; }
    private  async Task Update(int BOId)
    {

        UpdateBO = ListBusinesses.Find(x => x.boid == BOId);

        nm.NavigateTo("savebo/update");

    }

}
